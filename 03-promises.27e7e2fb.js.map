{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SAC9BC,EAAWF,SAASC,cAAc,uBAClCE,EAAeH,SAASC,cAAc,sBACtCG,EAAYJ,SAASC,cAAc,wBAEzC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACT,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAc,CAACT,SAAUA,EAAUC,MAAOA,GAC5CK,EACFH,EAAQM,GAERL,EAAOK,E,GAERR,E,IAoCPR,EAAKiB,iBAAiB,UA7BE,SAACC,GACvBA,EAAMC,iBAEN,IADA,IAAIC,EAAe,EACVC,EAAI,EAAGA,GAAMhB,EAAUiB,MAAQD,IAMtCf,EAAce,EAJZD,GADQ,IAANC,EACcE,SAASpB,EAASmB,OAElBC,SAASnB,EAAakB,QAGvCE,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAEjBkB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,MACpE,CACAsB,SAAS,EACTC,QAASX,G,IAGZY,OAAM,SAAAP,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAElBkB,EAAA5B,GAAS6B,OAAOM,QAAQ,sBAAqCJ,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,MACnE,CACEsB,SAAS,EACTC,QAASX,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// получим элементы\nconst form = document.querySelector(\".form\");\nconst inpDelay = document.querySelector(\"input[name='delay']\");\nconst inpDelayStep = document.querySelector(\"input[name='step']\");\nconst inpAmount = document.querySelector(\"input[name='amount']\");\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      const promiseData = {position: position, delay: delay};\n      if (shouldResolve) {           \n        resolve(promiseData);\n      } else { \n        reject(promiseData);   \n      };\n    }, delay);\n  });  \n};\n\n\n\n\nconst promiseGenerate = (event) =>{\n  event.preventDefault();\n  let currentDelay = 0; \n  for (let i = 1; i <= (inpAmount.value); i++) {\n    if (i === 1) {\n      currentDelay += parseInt(inpDelay.value); \n    } else {\n      currentDelay += parseInt(inpDelayStep.value); \n    }        \n    createPromise(i,currentDelay)\n    .then(({ position, delay }) => {\n      //console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);  \n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`,\n      {\n        useIcon: false,\n        timeout: currentDelay,\n      },);\n    })\n    .catch(({ position, delay }) => {\n      //console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`,\n      {\n        useIcon: false,\n        timeout: currentDelay,\n      },);\n    });\n  }\n};\n\nform.addEventListener(\"submit\",promiseGenerate);\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$inpDelay","$ce04d3a99e08e73b$var$inpDelayStep","$ce04d3a99e08e73b$var$inpAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","shouldResolve","Math","random","promiseData","addEventListener","event","preventDefault","currentDelay","i","value","parseInt","then","param","$parcel$interopDefault","Notify","success","concat","useIcon","timeout","catch","failure"],"version":3,"file":"03-promises.27e7e2fb.js.map"}